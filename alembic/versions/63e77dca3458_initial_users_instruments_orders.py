"""Initial  users, instruments, orders

Revision ID: 63e77dca3458
Revises:
Create Date: 2025-05-14 16:58:30.939382

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "63e77dca3458"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "instruments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ticker", sa.String(length=20), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_instruments")),
    )
    with op.batch_alter_table("instruments", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_instruments_ticker"), ["ticker"], unique=True
        )

    op.create_table(
        "orders",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("ticker", sa.String(length=20), nullable=False),
        sa.Column(
            "direction",
            sa.Enum("BUY", "SELL", name="order_direction_enum"),
            nullable=False,
        ),
        sa.Column("qty", sa.Integer(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "NEW",
                "EXECUTED",
                "PARTIALLY_EXECUTED",
                "CANCELLED",
                name="order_status_enum",
            ),
            nullable=False,
        ),
        sa.Column("filled_qty", sa.Integer(), server_default="0", nullable=False),
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_orders")),
    )
    with op.batch_alter_table("orders", schema=None) as batch_op:
        batch_op.create_index(
            "ix_orders_active_for_matching",
            ["ticker", "status", "direction", "price"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_orders_timestamp"), ["timestamp"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_orders_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column(
            "role", sa.Enum("USER", "ADMIN", name="user_role_enum"), nullable=False
        ),
        sa.Column("api_key", sa.String(length=100), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_users_api_key"), ["api_key"], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_api_key"))

    op.drop_table("users")
    with op.batch_alter_table("orders", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_orders_user_id"))
        batch_op.drop_index(batch_op.f("ix_orders_timestamp"))
        batch_op.drop_index("ix_orders_active_for_matching")

    op.drop_table("orders")
    with op.batch_alter_table("instruments", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_instruments_ticker"))

    op.drop_table("instruments")
    # ### end Alembic commands ###
