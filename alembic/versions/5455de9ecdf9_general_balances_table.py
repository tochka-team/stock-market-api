"""general balances table

Revision ID: 5455de9ecdf9
Revises: ba7e1f42ce83
Create Date: 2025-05-17 00:07:44.127276

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5455de9ecdf9'
down_revision: Union[str, None] = 'ba7e1f42ce83'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('balances',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('ticker', sa.String(length=20), nullable=False, comment="Тикер актива или валюты (e.g., 'AAPL', 'RUB')"),
    sa.Column('amount', sa.Integer(), server_default='0', nullable=False, comment='Текущее количество актива или денежных средств на балансе'),
    sa.Column('locked_amount', sa.Integer(), server_default='0', nullable=False, comment='Количество актива или денежных средств, заблокированное в активных ордерах'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_balances')),
    sa.UniqueConstraint('user_id', 'ticker', name='uq_user_ticker_balance')
    )
    with op.batch_alter_table('balances', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_balances_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    with op.batch_alter_table('balances', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_balances_user_id'))

    op.drop_table('balances')
    # ### end Alembic commands ###
